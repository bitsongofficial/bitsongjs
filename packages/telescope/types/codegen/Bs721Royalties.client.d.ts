/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.21.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { Coin, StdFee } from "@cosmjs/amino";
import { Uint128, ContributorListResponse } from "./Bs721Royalties.types";
export interface Bs721RoyaltiesReadOnlyInterface {
    contractAddress: string;
    listContributors: ({ limit, startAfter }: {
        limit?: number;
        startAfter?: string;
    }) => Promise<ContributorListResponse>;
    withdrawableAmount: () => Promise<Uint128>;
    distributableAmount: () => Promise<Uint128>;
}
export declare class Bs721RoyaltiesQueryClient implements Bs721RoyaltiesReadOnlyInterface {
    client: CosmWasmClient;
    contractAddress: string;
    constructor(client: CosmWasmClient, contractAddress: string);
    listContributors: ({ limit, startAfter }: {
        limit?: number;
        startAfter?: string;
    }) => Promise<ContributorListResponse>;
    withdrawableAmount: () => Promise<Uint128>;
    distributableAmount: () => Promise<Uint128>;
}
export interface Bs721RoyaltiesInterface extends Bs721RoyaltiesReadOnlyInterface {
    contractAddress: string;
    sender: string;
    distribute: (fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    withdraw: (fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
}
export declare class Bs721RoyaltiesClient extends Bs721RoyaltiesQueryClient implements Bs721RoyaltiesInterface {
    client: SigningCosmWasmClient;
    sender: string;
    contractAddress: string;
    constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string);
    distribute: (fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    withdraw: (fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
}
